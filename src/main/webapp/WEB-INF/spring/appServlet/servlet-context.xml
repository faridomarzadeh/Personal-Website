<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

   <beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <beans:property name="basenames">
            <beans:list>
                <beans:value>classpath:validation</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<beans:bean  id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
	<beans:property name="driverClassName" value="com.mysql.jdbc.Driver"/>
	<beans:property name="url" value="jdbc:mysql://localhost:3306/WebsiteDB"/>
	<beans:property name="username" value="root"/>
	<beans:property name="password" value="Froal-1372"></beans:property>
	</beans:bean>
	
	<beans:bean id="hibernate4AnnotatedSessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
	<beans:property name="dataSource" ref="dataSource" />
	<beans:property name="annotatedClasses">
	<beans:list>
	<beans:value>com.springmvc.website.models.Post</beans:value>
	<beans:value>com.springmvc.website.models.Menu</beans:value>
	<beans:value>com.springmvc.website.models.Role</beans:value>
	<beans:value>com.springmvc.website.models.User</beans:value>
	</beans:list>
	</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<!--   <beans:bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <beans:property name="dataSource" ref="dataSource"/>
        <beans:property name="packagesToScan" value="com.springmvc.website.models"/>
        <beans:property name="jpaVendorAdapter">
            <beans:bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </beans:property>
        <beans:property name="jpaProperties">
            <beans:props>
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</beans:prop>
                <beans:prop key="hibernate.show_sql">true</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>
	
	<beans:bean id="transactionManage"
          class="org.springframework.orm.jpa.JpaTransactionManager">
        <beans:property name="entityManagerFactory" ref="entityManagerFactory"/>
    </beans:bean>
    <jpa:repositories base-package="com.springmvc.website.dao"/>-->
    
    <beans:bean id="userDetailsServiceImplementation" class="com.springmvc.website.services.UserDetailsServiceImplementation"></beans:bean>
    <beans:bean id="securityService" class="com.springmvc.website.services.SecurityServiceImplementation"></beans:bean>
    <beans:bean id="userValidator" class="com.springmvc.website.validators.UserValidator"></beans:bean>
    

    <beans:bean id="encoder"
          class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <beans:constructor-arg name="strength" value="11"/>
    </beans:bean>
        
    
    <security:http auto-config="true">
        <security:intercept-url pattern="/admin/**" access="hasRole('ROLE_USER')"/>
        <security:form-login login-page="/login" default-target-url="/admin/home" authentication-failure-url="/login?error" username-parameter="username" password-parameter="password"/>
        <security:logout logout-success-url="/login?logout" />
    </security:http>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider user-service-ref="userDetailsServiceImplementation">
            <security:password-encoder ref="encoder"></security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>
    
	<beans:bean id="iDAO" class="com.springmvc.website.dao.DAOImplementation">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="iService" class="com.springmvc.website.services.ServiceImplementation">
		<beans:property name="iDAO" ref="iDAO"></beans:property>
	</beans:bean>
	<context:component-scan base-package="com.springmvc.website.controllers" />
	<context:component-scan base-package="com.springmvc.website.models" />
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	
</beans:beans>
